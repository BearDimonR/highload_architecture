name: Build_and_test_compose

on:
  pull_request:
    branches:
    - main

env:
  NGINX_HOST: http://localhost:4000
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD}}
  MYSQL_HOST: ${{ secrets.MYSQL_HOST}}
  MYSQL_PORT: ${{ secrets.MYSQL_PORT}}
  MYSQL_DB: ${{ secrets.MYSQL_DB}}
  REDIS_URL: ${{ secrets.REDIS_URL}}
  REDIS_QUEUES: ${{ secrets.REDIS_QUEUES}}
  CACHE_TYPE: ${{ secrets.CACHE_TYPE}}
  CACHE_TIMEOUT: ${{ secrets.CACHE_TIMEOUT}}

jobs:
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Repository Checkout
      uses: actions/checkout@v1
      
    - name: Create .env
      uses: CallePuzzle/envvar-to-dotenv-action@v1.0.0
      with:
        variableNamesByFilter: ^.*
      
    - name: Start containers
      run: docker-compose -f "docker-compose.yml" up -d --build

    - name: Install node v14.x
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
        
    - name: Install tests dependencies
      run: npm i
      working-directory: ./tests
        
    - name: Wait For Read response
      uses: nev7n/wait_for_response@v1.0.1
      with:
        url: $NGINX_HOST/get
        responseCode: 200
        timeout: 30000
        interval: 5000

    
    - name: Wait For Write response
      uses: nev7n/wait_for_response@v1.0.1
      with:
        url: $NGINX_HOST/write/check_status/check
        responseCode: 204
        timeout: 30000
        interval: 5000

    - name: Run tests
      run: HOST=$NGINX_HOST npm run test
      working-directory: ./tests

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down